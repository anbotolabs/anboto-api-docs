---
name: Build

on:
  pull_request:

env:
  NODE_VERSION: 16
  RUBY_VERSION: 3.3

jobs:
  generate-docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: node-${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            node-${{ runner.os }}-${{ env.NODE_VERSION }}-
            node-${{ runner.os }}-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Widdershins
        run: npm install -g widdershins

      - name: Run Widdershins
        run: widdershins anboto-trading-api-2.0.yml -o ./source/index.html.md

      - uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: gems-${{ runner.os }}-${{ env.RUBY_VERSION }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            gems-${{ runner.os }}-${{ env.RUBY_VERSION }}-
            gems-${{ runner.os }}-

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - name: Update gems
        run: gem update --system

      - run: bundle config set deployment 'true'
      - name: bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Build docs
        run: bundle exec middleman build --build-dir ./docs

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs/

  push-docs:
    runs-on: ubuntu-latest
    needs: generate-docs

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: docs
          path: docs/

      - name: Check for changes in docs/ folder
        id: check_changes
        run: |
          # Check for modified or deleted files in the docs/ folder
          if ! git diff --quiet HEAD -- docs/; then
            echo "::set-output name=changes_detected::true"
            echo "Changes detected in the 'docs/' folder."
          # Check for untracked new files in the docs/ folder
          elif git ls-files --others --exclude-standard | grep '^docs/'; then
            echo "::set-output name=changes_detected::true"
            echo "New files detected in the 'docs/' folder."
          else
            echo "::set-output name=changes_detected::false"
            echo "No changes or new files detected in the 'docs/' folder."
          fi
        if: github.event_name == 'pull_request'

      - name: Configure Git
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
        if: steps.check_changes.outputs.changes_detected == 'true' && github.event_name == 'pull_request'

      - name: Commit and push changes to docs/
        run: |
          git add docs/
          git commit -m "[Automated] Update generated docs" || echo "No changes to commit"
          git push
        if: steps.check_changes.outputs.changes_detected == 'true' && github.event_name == 'pull_request'
