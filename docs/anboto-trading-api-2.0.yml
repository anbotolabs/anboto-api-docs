openapi: 3.0.1
info:
  title: Anboto Trading API
  description: "Anboto Trading API <BR><BR> <B>Authentication</B><BR>Please visit\
    \ Anboto's website to generate an API key<BR>   Mainnet:<BR>        -<a href=\"\
    https://api.anboto.xyz\">https://api.anboto.xyz</a>  (Live on March 14 2024) <BR>\
    \   Testnet:<BR>        -<a href=\"https://api.testnet.anboto.xyz\">https://api.testnet.anboto.xyz</a>\
    \ (LIVE now) <BR>          <I>(All trades are simulated on testnet and will not\
    \ trade on any real exchange)</I><BR>Select Your API Key Type<BR>     1) <B>System-generated</B>\
    \ API Keys: The API key generated by Anboto use HMAC encryption. You will be provided\
    \ with a an API key and a secret key, that can be used to trade, please keep the\
    \ keys safe.<BR>   2) <B>Self-generated</B> API keys operate with RSA encryption.\
    \      You must create your public and private keys and only provide the public\
    \ key to Anboto, we will never hold your private key.<BR><BR><B>Parameters for\
    \ Authenticated Endpoints</B>The following HTTP header keys must be used for authentication\
    \ on <U>any endpoint annotated with <B>'ApiKeyAuth'</B></U>:<BR> - <B>X-API-KEY</B>\
    \ - API key<BR> - <B>X-TIMESTAMP</B> - timestamp in milliseconds from epoch<BR>\
    \ - <B>X-SIGN</B> - a signature derived from the request's parameters<BR> - <B>X-RECV-WINDOW</B>\
    \ (unit in millisecond and default value is 5,000) to specify how long an HTTP\
    \ request is valid. A smaller X-RECV-WINDOW is more secure, but your request may\
    \ fail if the transmission time is greater than your X-RECV-WINDOW.<BR><BR><B>Basic\
    \ steps:</B><BR>1. The string to sign should be a concatenation of 'timestamp\
    \ + API key + (recv_window) + (queryString | jsonBodyString)' The queryString\
    \ should be assembled in alphabetical order.<BR>2. Take the your secret ket and\
    \ decode from Base664 into a byte array and then use the HMAC_SHA256 (for system\
    \ generated keys) or RSA_SHA256 algorithm to sign the string in step 1.<BR>3.\
    \ Convert the signed value to a hex string (HMAC_SHA256) / base64 (RSA_SHA256)\
    \ to obtain the sign parameter.<BR>4. Append the sign parameter to request header,\
    \ and send the HTTP request. <BR><BR>Examples can be found here: <a href=\"https://github.com/anbotolabs/examples\"\
    >https://github.com/anbotolabs/examples</a><BR>The OpenAPI spec can be found here:\
    \ <a href=\"https://anbotolabs.github.io/anboto-api-docs/anboto-trading-api-2.0.yml\"\
    >https://anbotolabs.github.io/anboto-api-docs/anboto-trading-api-2.0.yml</a>"
  version: "2.0"
paths:
  /api/v2/trading/order/byId:
    get:
      tags:
      - Rest API
      summary: Returns the order details for all matching orders
      description: Both the orderIds and clientOrderIds parameters will be used in
        the lookup
      operationId: getOrders
      parameters:
      - name: orderIds
        in: query
        description: The list of anboto generated order ids
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
      - name: clientOrderIds
        in: query
        description: The list of client generated order ids
        schema:
          type: array
          nullable: true
          items:
            type: string
      responses:
        "401":
          description: "Unauthorized, Invalid Signature"
        "200":
          description: The list of matching orders.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsList'
      security:
      - ApiKeyAuth: []
  /api/v2/trading/order/cancel:
    post:
      tags:
      - Rest API
      summary: Cancels the parent order
      description: This will initiate a cancellation request and set the order state
        to pending cancel. For the finalized state call /order/id?orderId=xxx
      operationId: cancelOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelParentOrderRequest'
        required: true
      responses:
        "401":
          description: "Unauthorized, Invalid Signature"
        "200":
          description: Cancellation request processed and in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSummary'
      security:
      - ApiKeyAuth: []
  /api/v2/trading/order/cancelMany:
    post:
      tags:
      - Rest API
      summary: Cancels all of the parent orders specified in the batch request
      description: This will initiate the order cancellations and set the status of
        all orders to pending cancel. For the finalized state call /order?orderId=xxx
      operationId: cancelMany
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelManyParentOrdersRequest'
        required: true
      responses:
        "401":
          description: "Unauthorized, Invalid Signature"
        "200":
          description: Cancellation request processed and in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSummary'
      security:
      - ApiKeyAuth: []
  /api/v2/trading/order/create:
    post:
      tags:
      - Rest API
      summary: Create a new order
      description: Process a new order request and return order response
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateParentOrderRequest'
        required: true
      responses:
        "401":
          description: "Unauthorized, Invalid Signature"
        "201":
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSummary'
      security:
      - ApiKeyAuth: []
  /api/v2/trading/order/createMany:
    post:
      tags:
      - Rest API
      summary: Creates many new orders in a single request.
      description: "Process a set of new order request and returns a summary for each\
        \ order, the orders are not linked during execution and this endpoint is for\
        \ convenience only"
      operationId: createManyOrders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateManyParentOrdersRequest'
        required: true
      responses:
        "401":
          description: "Unauthorized, Invalid Signature"
        "201":
          description: Order processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSummaryList'
      security:
      - ApiKeyAuth: []
  /api/v2/trading/order/find:
    get:
      tags:
      - Rest API
      summary: Returns the order details for all matching orders
      description: Both the orderIds and clientOrderIds parameters will be used in
        the lookup
      operationId: findOrders
      parameters:
      - name: startMs
        in: query
        description: The start time for the query as ms since epoch
        schema:
          type: integer
          format: int64
          nullable: true
      - name: endMs
        in: query
        description: The end time for the query as ms since epoch
        schema:
          type: integer
          format: int64
          nullable: true
      - name: limit
        in: query
        description: The maximum number of orders to return in the results
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "401":
          description: "Unauthorized, Invalid Signature"
        "200":
          description: The list of matching orders.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsList'
      security:
      - ApiKeyAuth: []
  /api/v2/trading/order/open:
    get:
      tags:
      - Rest API
      summary: Returns all open orders
      description: All orders that are not in a terminal state will be returned
      operationId: getOpenOrders
      responses:
        "401":
          description: "Unauthorized, Invalid Signature"
        "200":
          description: The list of open orders.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsList'
      security:
      - ApiKeyAuth: []
  /status/ping:
    get:
      operationId: status
      responses:
        "200":
          description: status 200 response
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    ApiErrorCode:
      type: string
      description: The error code used to describe why an order was rejected.
      enum:
      - OTHER
      - QUANTITY_EXCEED
      - AUTHENTICATION_ERROR
      - INSUFFICIENT_FUNDS
      - RATE_LIMIT_EXCEEDED
      - DDOS_PROTECTION
      - EXCHANGE_NOT_AVAILABLE
      - NETWORK_ERROR
      - INVALID_ORDER
      - EXCHANGE_ERROR
      - EMS_INSTANCES_DOWN
      - SLIPPAGE_EXCEEDED
      - EXPIRY_REACHED
      - MAX_FEE_PER_GAS_IS_TOO_LOW
      - PARENT_ORDER_WAS_TERMINATED
      - MAX_PRIORITY_FEE_PER_GAS_IS_TOO_LOW
      - INVALID_SIGNATURE
      - INVALID_API_KEY
      - INVALID_TIMESTAMP
      - SYSTEM_ERROR
      - INVALID_REQUEST
    AssetCategory:
      type: string
      description: The Asset category of the order.
      enum:
      - SPOT
      - FUTURE
      - OPTION
    CancelManyParentOrdersRequest:
      required:
      - orders
      type: object
      properties:
        orders:
          type: array
          description: The list of parent cancellation requests
          items:
            $ref: '#/components/schemas/CancelParentOrderRequest'
      description: Used for cancelling many parent orders at the same time
    CancelParentOrderRequest:
      type: object
      properties:
        orderId:
          type: integer
          description: The Anboto generated order id
          format: int64
          nullable: true
        clientOrderId:
          type: string
          description: The client provided order id
          nullable: true
      description: Used for cancelling a parent order
    ClipSizeType:
      type: string
      description: The clip size for the child orders. The default is AUTOMATIC
      enum:
      - ABSOLUTE
      - PERCENTAGE
      - AUTOMATIC
    CreateManyParentOrdersRequest:
      required:
      - orders
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/CreateParentOrderRequest'
      description: A request to create many parent orders in a single request.
    CreateParentOrderRequest:
      required:
      - assetCategory
      - exchange
      - quantity
      - side
      - strategy
      - symbol
      type: object
      properties:
        clientOrderId:
          type: string
          description: "A custom string to identify the order, e.g. ABC-12345\\^12-10-23"
          nullable: true
        exchange:
          description: "The execution exchange, e.g. BINANCE"
          allOf:
          - $ref: '#/components/schemas/Exchange'
        subaccount:
          type: string
          description: The sub-account under which to trade the order
          nullable: true
        symbol:
          type: string
          description: "The symbol using Anboto symbology, e.g. BTC/USDT"
        assetCategory:
          $ref: '#/components/schemas/AssetCategory'
        side:
          $ref: '#/components/schemas/Side'
        quantity:
          type: number
          description: "The quantity to trade as a exchange trade-able decimal value,\
            \ e.g. 0.015"
        strategy:
          $ref: '#/components/schemas/ExecutionStrategy'
        limitPrice:
          type: number
          description: "The exchange valid limit price for the order, e.g. 2205.10"
          nullable: true
        startTime:
          type: string
          description: "The start time in UTC (defaults to NOW), e.g. 2024-01-22T22:05:00Z"
          format: date-time
          nullable: true
        endTime:
          type: string
          description: "The end time in UTC, defaults to 30 days time, this will be\
            \ rejected if more than 60 days in the future, e.g. 2024-04-22T22:05:00Z"
          format: date-time
          nullable: true
        clipSizeType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ClipSizeType'
        clipSizeVal:
          type: number
          description: "The clip size value, required if the type is ABSOLUTE or PERCENTAGE,\
            \ e.g 0.01"
          nullable: true
        params:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/OrderParams'
      description: Used for creating a parent order.
    Exchange:
      type: string
      description: The exchange where to trade the order.
      enum:
      - BINANCE
      - HUOBI
      - GATEIO
      - KRAKEN
      - KUCOIN
      - OKX
      - BYBIT
      - BITGET
    ExecutionStrategy:
      type: string
      description: The execution strategy for the order.
      enum:
      - TWAP
      - VWAP
      - ICEBERG
      - STOP_LOSS
    OrderDetails:
      required:
      - averagePrice
      - filledQuantity
      - lastPrice
      - lastQuantity
      - leavesQuantity
      - status
      - symbol
      type: object
      properties:
        orderId:
          type: integer
          description: The Anboto generated order id
          format: int64
          nullable: true
        clientOrderId:
          type: string
          description: The client provided order id
          nullable: true
        symbol:
          type: string
          description: The order symbol using Anboto symbology
        status:
          $ref: '#/components/schemas/OrderStatus'
        filledQuantity:
          type: number
          description: The absolute amount of the order quantity filled.
        leavesQuantity:
          type: number
          description: The absolute amount of the order quantity remaining to be filled.
        side:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/Side'
        lastQuantity:
          type: number
          description: The last qty received in a fill from the exchange
        lastPrice:
          type: number
          description: The last price executed on the exchange
        averagePrice:
          type: number
          description: The average execution price of the order
    OrderDetailsList:
      required:
      - orders
      type: object
      properties:
        orders:
          type: array
          description: The list of order details for separate orders.
          items:
            $ref: '#/components/schemas/OrderDetails'
    OrderParams:
      type: object
      properties:
        durationSeconds:
          type: integer
          description: "The duration of the order in seconds, this is a required field\
            \ for TWAP and VWAP. e.g. 120"
          format: int64
          nullable: true
        tradingStyle:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/TradingStyle'
        randomizeAmount:
          type: boolean
          description: Whether to randomize the slice amount.
          nullable: true
        would:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/WouldInfo'
        trigger:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/TriggerInfo'
        placementInfos:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/PlacementInfo'
      description: The advanced order parameters to modify the execution behavior.
    OrderStatus:
      type: string
      description: The order status
      enum:
      - PENDING_NEW
      - ACCEPTED
      - REJECTED
      - PARTIALLY_FILLED
      - FILLED
      - PENDING_CANCEL
      - CANCELLED
      - PENDING_PAUSE
      - PAUSED
      - PENDING_UNPAUSE
      - EXPIRED
      - CANCEL_REJECTED
    OrderSummary:
      required:
      - createdAt
      - status
      type: object
      properties:
        orderId:
          type: integer
          description: "The Anboto assigned order identifier, e.g. 23019838281923902992"
          format: int64
          nullable: true
        clientOrderId:
          type: string
          description: "A custom string to identify the order, e.g. \"ABC-12345\\\
            ^12-10-23\""
          nullable: true
        status:
          description: "The status of the order, e.g. PENDING_NEW"
          allOf:
          - $ref: '#/components/schemas/OrderStatus'
        createdAt:
          type: string
          description: "The time in UTC when the order was created, e.g. 2024-01-22T22:05:00Z"
          format: date-time
        message:
          type: string
          description: "Any additional information, usually if the order was rejected"
          nullable: true
        errorCode:
          description: The error code if the order was rejected
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ApiErrorCode'
      description: Summarizes the state of the parent order
    OrderSummaryList:
      required:
      - orders
      type: object
      properties:
        orders:
          type: array
          description: The list of order summaries for separate orders.
          items:
            $ref: '#/components/schemas/OrderSummary'
    PlacementInfo:
      required:
      - placementMode
      type: object
      properties:
        placementMode:
          $ref: '#/components/schemas/PlacementMode'
        placement:
          type: integer
          description: "Where to place new orders in the book, e.g. 2 would slice\
            \ at the second best observed price."
          format: int32
          nullable: true
        cancel:
          type: integer
          description: "At what level to cancel an existing order on the book, e.g.\
            \ 6 would cancel the order when it got to level 6 in the book"
          format: int32
          nullable: true
      description: How to place an order into the book
    PlacementMode:
      type: string
      description: The style used to place an order in the book. DEFAULT is the default
        and will be at the discretion of the trading strategy
      enum:
      - DEFAULT
      - TIGHT
      - CUSTOM
    Side:
      type: string
      description: The side of the book to trade.
      enum:
      - BUY
      - SELL
      - SHORT_SELL
    TradingStyle:
      type: string
      description: "The trading style of the order, the default is HYBRID"
      enum:
      - PASSIVE
      - AGGRESSIVE
      - HYBRID
    TriggerCondition:
      type: string
      description: The trigger condition to start the order
      enum:
      - ABOVE
      - BELOW
    TriggerInfo:
      required:
      - triggerCondition
      - triggerPrice
      type: object
      properties:
        triggerPrice:
          type: number
          description: The price to monitor for the trigger
        triggerCondition:
          $ref: '#/components/schemas/TriggerCondition'
      description: Information related to how the order should be triggered.
    WouldInfo:
      required:
      - wouldPct
      - wouldPrice
      - wouldStyle
      type: object
      properties:
        wouldPrice:
          type: number
          description: The price to trigger Would mode
        wouldPct:
          type: number
          description: The percent of the order to trade when the Would price triggers
        wouldStyle:
          $ref: '#/components/schemas/TradingStyle'
      description: Information to instruct how to execute a Would price trigger.
