openapi: 3.0.1
info:
  title: Anboto Trading API
  description: "Anboto Trading API <BR><BR> <B>Authentication</B><BR>Please visit\
    \ Anboto's website to generate an API key<BR>   Mainnet:<BR>        -<a href=\"\
    https://api.anboto.xyz\">https://api.anboto.xyz</a><BR><BR>Select Your API Key\
    \ Type<BR>     1) <B>System-generated</B> API Keys: The API key generated by Anboto\
    \ use HMAC encryption. You will be provided with a an API key and a secret key,\
    \ that can be used to trade, please keep the keys safe.<BR>   2) <B>Self-generated</B>\
    \ API keys operate with RSA encryption.      You must create your public and private\
    \ keys and only provide the public key to Anboto, we will never hold your private\
    \ key.<BR><BR><B>Parameters for Authenticated Endpoints</B>The following HTTP\
    \ header keys must be used for authentication on <U>any endpoint annotated with\
    \ <B>'ApiKeyAuth'</B></U>:<BR> - <B>X-API-KEY</B> - API key<BR> - <B>X-TIMESTAMP</B>\
    \ - timestamp in milliseconds from epoch<BR> - <B>X-SIGN</B> - a signature derived\
    \ from the request's parameters<BR> - <B>X-RECV-WINDOW</B> (unit in millisecond\
    \ and default value is 5,000) to specify how long an HTTP request is valid. A\
    \ smaller X-RECV-WINDOW is more secure, but your request may fail if the transmission\
    \ time is greater than your X-RECV-WINDOW.<BR><BR><B>Basic steps:</B><BR>1. The\
    \ string to sign should be a concatenation of 'timestamp + API key + (recv_window)\
    \ + (queryString | jsonBodyString)' The queryString should be assembled in alphabetical\
    \ order.<BR>2. Take the yur secret ket and decode from Base664 into a byte array\
    \ and then use the HMAC_SHA256 (for system generated keys) or RSA_SHA256 algorithm\
    \ to sign the string in step 1.<BR>3. Convert the signed value to a hex string\
    \ (HMAC_SHA256) / base64 (RSA_SHA256) to obtain the sign parameter.<BR>4. Append\
    \ the sign parameter to request header, and send the HTTP request."
  version: "2.0"
paths:
  /api/v2/trading/order/byId:
    get:
      tags:
      - Rest API
      summary: Returns the order details for all matching orders
      description: Both the orderIds and clientOrderIds parameters will be used in
        the lookup
      operationId: getOrders
      parameters:
      - name: orderIds
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
      - name: clientOrderIds
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      responses:
        "401":
          description: "Unauthorized, Invalid Signature"
        "200":
          description: The list of matching orders.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsList'
      security:
      - ApiKeyAuth: []
  /api/v2/trading/order/cancel:
    post:
      tags:
      - Rest API
      summary: Cancels the parent order
      description: This will initiate a cancellation request and set the order state
        to pending cancel. For the finalized state call /order/id?orderId=xxx
      operationId: cancelOrder
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "401":
          description: "Unauthorized, Invalid Signature"
        "200":
          description: Cancellation request processed and in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSummary'
      security:
      - ApiKeyAuth: []
  /api/v2/trading/order/cancelMany:
    post:
      tags:
      - Rest API
      summary: Cancels all of the parent orders specified in the batch request
      description: This will initiate the order cancellations and set the status of
        all orders to pending cancel. For the finalized state call /order?orderId=xxx
      operationId: cancelMany
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "401":
          description: "Unauthorized, Invalid Signature"
        "200":
          description: Cancellation request processed and in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSummary'
      security:
      - ApiKeyAuth: []
  /api/v2/trading/order/create:
    post:
      tags:
      - Rest API
      summary: Create a new order
      description: Process a new order request and return order response
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "401":
          description: "Unauthorized, Invalid Signature"
        "201":
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSummary'
      security:
      - ApiKeyAuth: []
  /api/v2/trading/order/createMany:
    post:
      tags:
      - Rest API
      summary: Creates many new orders in a single request.
      description: "Process a set of new order request and returns a summary for each\
        \ order, the orders are not linked during execution and this endpoint is for\
        \ convenience only"
      operationId: createManyOrders
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "401":
          description: "Unauthorized, Invalid Signature"
        "201":
          description: Order processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSummaryList'
      security:
      - ApiKeyAuth: []
  /api/v2/trading/order/find:
    get:
      tags:
      - Rest API
      summary: Returns the order details for all matching orders
      description: Both the orderIds and clientOrderIds parameters will be used in
        the lookup
      operationId: findOrders
      parameters:
      - name: startMs
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: endMs
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "401":
          description: "Unauthorized, Invalid Signature"
        "200":
          description: The list of matching orders.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsList'
      security:
      - ApiKeyAuth: []
  /api/v2/trading/order/open:
    get:
      tags:
      - Rest API
      summary: Returns all open orders
      description: All orders that are not in a terminal state will be returned
      operationId: getOpenOrders
      responses:
        "401":
          description: "Unauthorized, Invalid Signature"
        "200":
          description: The list of open orders.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsList'
      security:
      - ApiKeyAuth: []
  /status:
    get:
      operationId: home
      responses:
        "200":
          description: home 200 response
          content:
            application/json:
              schema:
                type: string
  /status/ping:
    get:
      operationId: status
      responses:
        "200":
          description: status 200 response
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    ApiErrorCode:
      type: string
      enum:
      - OTHER
      - QUANTITY_EXCEED
      - AUTHENTICATION_ERROR
      - INSUFFICIENT_FUNDS
      - RATE_LIMIT_EXCEEDED
      - DDOS_PROTECTION
      - EXCHANGE_NOT_AVAILABLE
      - NETWORK_ERROR
      - INVALID_ORDER
      - EXCHANGE_ERROR
      - EMS_INSTANCES_DOWN
      - SLIPPAGE_EXCEEDED
      - EXPIRY_REACHED
      - MAX_FEE_PER_GAS_IS_TOO_LOW
      - PARENT_ORDER_WAS_TERMINATED
      - MAX_PRIORITY_FEE_PER_GAS_IS_TOO_LOW
      - INVALID_SIGNATURE
      - INVALID_API_KEY
      - INVALID_TIMESTAMP
      - SYSTEM_ERROR
      - INVALID_REQUEST
    AssetCategory:
      type: string
      description: An asset category for the API so that we do not need to expose
        AssetClass to the API users
      enum:
      - SPOT
      - FUTURE
      - OPTION
    CancelParentOrderRequest:
      type: object
      properties:
        orderId:
          type: integer
          format: int64
          nullable: true
        clientOrderId:
          type: string
          nullable: true
      description: Used for cancelling a parent order
    ClipSizeType:
      type: string
      enum:
      - ABSOLUTE
      - PERCENTAGE
      - AUTOMATIC
    CreateParentOrderRequest:
      required:
      - assetCategory
      - exchange
      - quantity
      - side
      - strategy
      - symbol
      type: object
      properties:
        clientOrderId:
          type: string
          nullable: true
        exchange:
          $ref: '#/components/schemas/Exchange'
        subaccount:
          type: string
          nullable: true
        symbol:
          type: string
        assetCategory:
          $ref: '#/components/schemas/AssetCategory'
        side:
          $ref: '#/components/schemas/Side'
        quantity:
          type: number
        strategy:
          $ref: '#/components/schemas/ExecutionStrategy'
        limitPrice:
          type: number
          nullable: true
        startTime:
          type: string
          format: date-time
          nullable: true
        endTime:
          type: string
          format: date-time
          nullable: true
        clipSizeType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ClipSizeType'
        clipSizeVal:
          type: number
          nullable: true
        params:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/OrderParams'
      description: Used for creating a parent order.
    Exchange:
      type: string
      enum:
      - BINANCE
      - HUOBI
      - GATEIO
      - KRAKEN
      - KUCOIN
      - OKX
      - BYBIT
      - BITGET
    ExecutionStrategy:
      type: string
      description: An enum for strategy for the API so that we do not need to expose
        the Strategy enum to the API users
      enum:
      - TWAP
      - VWAP
      - ICEBERG
      - MARKET
      - LIMIT
      - STOP_LOSS
    OrderDetails:
      required:
      - averagePrice
      - filledQuantity
      - lastPrice
      - lastQuantity
      - leavesQuantity
      - status
      - symbol
      type: object
      properties:
        orderId:
          type: integer
          format: int64
          nullable: true
        clientOrderId:
          type: string
          nullable: true
        symbol:
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
        filledQuantity:
          type: number
        leavesQuantity:
          type: number
        side:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/Side_1'
        lastQuantity:
          type: number
        lastPrice:
          type: number
        averagePrice:
          type: number
    OrderDetailsList:
      required:
      - orders
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderDetails'
    OrderParams:
      type: object
      properties:
        durationSeconds:
          type: integer
          format: int64
          nullable: true
        tradingStyle:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/TradingStyle'
        randomizeAmount:
          type: boolean
          nullable: true
        would:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/WouldInfo'
        trigger:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/TriggerInfo'
        placementInfos:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/PlacementInfo'
    OrderStatus:
      type: string
      enum:
      - PENDING_NEW
      - ACCEPTED
      - REJECTED
      - PARTIALLY_FILLED
      - FILLED
      - PENDING_CANCEL
      - CANCELLED
      - PENDING_PAUSE
      - PAUSED
      - PENDING_UNPAUSE
      - EXPIRED
      - CANCEL_REJECTED
    OrderSummary:
      required:
      - createdAt
      - status
      type: object
      properties:
        orderId:
          type: integer
          format: int64
          nullable: true
        clientOrderId:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/OrderStatus'
        createdAt:
          type: string
          format: date-time
        message:
          type: string
          nullable: true
        errorCode:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ApiErrorCode'
    OrderSummaryList:
      required:
      - orders
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderSummary'
    PlacementInfo:
      required:
      - placementMode
      type: object
      properties:
        placementMode:
          $ref: '#/components/schemas/PlacementMode'
        placement:
          type: integer
          format: int32
          nullable: true
        cancel:
          type: integer
          format: int32
          nullable: true
    PlacementMode:
      type: string
      description: The trading style of the order
      enum:
      - DEFAULT
      - TIGHT
      - CUSTOM
    Side:
      type: string
      enum:
      - BUY
      - SELL
      - SHORT_SELL
    Side_1:
      type: string
      enum:
      - BUY
      - SELL
      - SHORT_SELL
    TradingStyle:
      type: string
      description: The trading style of the order
      enum:
      - PASSIVE
      - AGGRESSIVE
      - HYBRID
    TriggerCondition:
      type: string
      description: The trigger condition to start the order
      enum:
      - ABOVE
      - BELOW
    TriggerInfo:
      required:
      - triggerCondition
      - triggerPrice
      type: object
      properties:
        triggerPrice:
          type: number
        triggerCondition:
          $ref: '#/components/schemas/TriggerCondition'
    WouldInfo:
      required:
      - wouldPct
      - wouldPrice
      - wouldStyle
      type: object
      properties:
        wouldPrice:
          type: number
        wouldPct:
          type: number
        wouldStyle:
          $ref: '#/components/schemas/TradingStyle'
